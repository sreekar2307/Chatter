{"version":3,"sources":["components/User.js","app/socket.js","app/config.js","components/Friends.js","components/Register.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","URL","backendUrl","io","transports","upgrade","autoConnect","path","useStyles","makeStyles","theme","root","display","alignItems","width","position","bottom","height","right","input","friends","borderRight","Friends","classes","useState","setFriends","messages","setMessages","selectedFriend","setSelectedFriend","message","setMessage","user","useContext","useEffect","socket","emit","resp","filter","res","userID","length","newMessages","map","active","forEach","value","findIndex","id","splice","push","userConnectedHandler","newUser","existing","friend","userDisconnectHandler","NewList","privateMessageHandler","content","seen","from","messageDeliveredHandler","to","on","off","handleSendMessage","toUser","text","messagesBody","index","Message","delivered","Grid","container","style","item","xs","className","List","component","Friend","username","selectedUser","selected","Welcome","Paper","maxHeight","overflow","OutlinedInput","disabled","fullWidth","type","onKeyDown","e","which","placeholder","onChange","event","target","endAdornment","IconButton","aria-label","onClick","ListItem","button","ListItemIcon","Tooltip","title","Badge","variant","color","overlap","fontSize","ListItemText","primary","left","secondary","statusIcon","Card","CardHeader","subheader","CardContent","getModalStyle","top","transform","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Register","modalStyle","setUser","open","setOpen","loading","setLoading","valid","setValid","textFieldValue","setTextFieldValue","buttonDisabled","setButtonDisabled","localStorage","getItem","auth","sessionObj","connect","disconnect","body","direction","Typography","gutterBottom","textAlign","TextField","error","label","helperText","required","validity","Button","setItem","Modal","aria-labelledby","aria-describedby","App","context","setContext","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a09e5300.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const UserContext = React.createContext();\n","import { io } from \"socket.io-client\";\nimport config from \"./config\";\n\nconst URL = config.backendUrl;\nexport default io(URL, {\n  transports: [\"websocket\"],\n  upgrade: false,\n  autoConnect: false,\n  path: \"/ws\",\n});\n","export default {\n    \"backendUrl\": process.env.NODE_ENV === 'development' ? \"http://localhost:4000\": \"http://ec2-52-66-160-163.ap-south-1.compute.amazonaws.com\"\n}","import { useContext, useEffect, useState } from \"react\";\nimport socket from \"../app/socket\";\nimport {\n  Badge,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  OutlinedInput,\n  Paper,\n  Tooltip,\n} from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { UserContext } from \"./User\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    position: \"absolute\",\n    bottom: 0,\n    height: \"10vh\",\n    right: 0,\n  },\n  input: {\n    height: \"100%\",\n  },\n  friends: {\n    borderRight: \"2px solid grey\",\n    position: \"relative\",\n    height: \"100vh\",\n  },\n}));\n\nexport default function Friends() {\n  const classes = useStyles();\n  const [friends, setFriends] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [selectedFriend, setSelectedFriend] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const user = useContext(UserContext)[0];\n\n  useEffect(() => {\n    socket.emit(\"users\", (resp) => {\n      const friends = resp.filter((res) => res.userID !== user.userID);\n      setFriends(friends)\n      if(friends.length > 0 ) setSelectedFriend(friends[0])\n    });\n  }, []);\n\n\n  useEffect(() => {\n    if(selectedFriend !== null) {\n      socket.emit(\"messages\", user.userID, selectedFriend.userID, (resp) => {\n        const newMessages = messages.map(message => ({...message, active: false}))\n        resp.forEach(value => {\n          const position = newMessages.findIndex(message => message.id === value.id)\n          if(position !== -1){\n            newMessages.splice(position, 1)\n          }\n          newMessages.push({...value, active: true})\n        });\n        setMessages(newMessages)\n      });\n    }\n  }, [selectedFriend, setSelectedFriend])\n\n  useEffect(() => {\n    const userConnectedHandler = (newUser) => {\n      const existing = friends.findIndex(\n        (friend) => friend.userID === newUser.userID\n      );\n      if (existing !== -1) {\n        friends[existing].active = true;\n        setFriends([...friends]);\n      } else {\n        setFriends([...friends, newUser]);\n      }\n    };\n\n    const userDisconnectHandler = (userID) => {\n      const NewList = friends.map((friend) => {\n        if (friend.userID === userID) {\n          friend.active = false;\n        }\n        return friend;\n      });\n      setFriends(NewList);\n    };\n\n    const privateMessageHandler = (content) => {\n      const seen = selectedFriend && content.from === selectedFriend.userID;\n      socket.emit(\"message received\", content.id, seen, (message) => {\n        setMessages([...messages, {...message, active: seen}])\n      });\n    };\n\n    const messageDeliveredHandler = (content) => {\n      setMessages(messages.map((message) => {\n        if (message.id === content.id) {\n          const seen = selectedFriend && content.to === selectedFriend.userID;\n          return {...content, active: seen};\n        }\n        return message;\n      }))\n    };\n\n    socket.on(\"user connected\", userConnectedHandler);\n    socket.on(\"user disconnected\", userDisconnectHandler);\n    socket.on(\"private message\", privateMessageHandler);\n    socket.on(\"delivered\", messageDeliveredHandler);\n\n    return () => {\n      socket.off(\"user connected\", userConnectedHandler);\n      socket.off(\"user disconnected\", userDisconnectHandler);\n      socket.off(\"private message\", privateMessageHandler);\n      socket.off(\"delivered\", messageDeliveredHandler);\n    };\n  });\n\n  const handleSendMessage = () => {\n    const toUser = selectedFriend;\n    setMessage(\"\");\n    socket.emit(\n      \"private message\",\n      {\n        from: user.userID,\n        to: toUser.userID,\n        text: message,\n      },\n      (resp) => {\n        const seen = selectedFriend && resp.to === selectedFriend.userID;\n        setMessages([...messages, {...resp, active: seen}]);\n      }\n    );\n  };\n\n  const messagesBody = messages.filter(message => message.active).map((message, index) => (\n    <Message\n      to={message.to}\n      from={message.from}\n      delivered={message.delivered}\n      seen={message.seen}\n      text={message.text}\n      key={`message-${index}`}\n    >\n      {message.text}\n    </Message>\n  ));\n  return (\n    <Grid container style={{ height: \"100vh\" }}>\n      <Grid item xs={3} className={classes.friends}>\n        {friends.map((friend, index) => (\n          <List component=\"nav\">\n            <Friend\n              key={friend.userID}\n              username={friend.username}\n              userID={friend.userID}\n              active={friend.active}\n              selectedUser={()=> setSelectedFriend(friend)}\n              selected={selectedFriend && friend.userID === selectedFriend.userID}\n            />\n          </List>\n        ))}\n        <Welcome />\n      </Grid>\n      <Grid item xs={9} style={{ position: \"relative\" }}>\n        <Paper style={{ maxHeight: \"90vh\", overflow: \"auto\" }}>\n          {messagesBody}\n        </Paper>\n        <Paper className={classes.root}>\n          <OutlinedInput\n            className={classes.input}\n            disabled={selectedFriend === -1}\n            value={message}\n            id=\"message\"\n            fullWidth\n            type=\"text\"\n            onKeyDown={(e) => {\n              if (e.which === 13) {\n                handleSendMessage();\n              }\n            }}\n            placeholder=\"Send Message\"\n            onChange={(event) => setMessage(event.target.value)}\n            endAdornment={\n              <IconButton\n                disabled={selectedFriend === -1}\n                type=\"button\"\n                aria-label=\"send\"\n                onClick={handleSendMessage}\n              >\n                <SendIcon />\n              </IconButton>\n            }\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction Friend({ username, active, selectedUser, selected }) {\n  return (\n    <ListItem button onClick={selectedUser} selected={selected}>\n      <ListItemIcon>\n        <Tooltip title={active ? \"online\" : \"offline\"}>\n          <Badge\n            variant=\"dot\"\n            color={active ? \"primary\" : \"secondary\"}\n            overlap=\"circular\"\n          >\n            <AccountCircleIcon fontSize=\"large\" color=\"primary\" />\n          </Badge>\n        </Tooltip>\n      </ListItemIcon>\n      <ListItemText primary={username} />\n    </ListItem>\n  );\n}\n\nfunction Welcome() {\n  const user = useContext(UserContext)[0];\n  return (\n    <List component=\"nav\" style={{ position: \"absolute\", bottom: 0, left: 0 }}>\n      <ListItem>\n        <ListItemText primary={\"Welcome\"} secondary={user.username} />\n      </ListItem>\n    </List>\n  );\n}\n\nfunction Message({ text, from, to, delivered, seen }) {\n  const user = useContext(UserContext)[0];\n  let statusIcon = <DoneIcon />;\n  if (delivered && seen) {\n    statusIcon = <DoneAllIcon color=\"primary\" />;\n  } else if (delivered) {\n    statusIcon = <DoneAllIcon color=\"default\" />;\n  }\n  return (\n    <Card style={{ position: \"relative\" }}>\n      <CardHeader subheader={user.userID === from ? \"You:\" : \"Friend:\"} />\n      <CardContent>\n        {text}\n        {from === user.userID && <div style={{ position: \"absolute\", right: 10 }}>{statusIcon}</div>}\n      </CardContent>\n    </Card>\n  );\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { Button, Grid, Modal, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { UserContext } from \"./User\";\nimport socket from \"../app/socket\";\nimport Friends from \"./Friends\";\nfunction getModalStyle() {\n  return {\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction Register() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [user, setUser] = useContext(UserContext);\n  const [open, setOpen] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [valid, setValid] = useState(false);\n  const [textFieldValue, setTextFieldValue] = useState(\"\");\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n\n  const handleUsernameChange = (event) => {\n    setTextFieldValue(event.target.value);\n    const validity = event.target.value.length > 2;\n    setValid(validity);\n    setButtonDisabled(!validity);\n  };\n\n  useEffect(() => {\n    const userID = localStorage.getItem(\"userID\");\n    if (userID) {\n      socket.auth = { userID };\n      socket.on(\"session\", (userID, sessionObj) => {\n        setLoading(false);\n        setUser(sessionObj);\n      });\n      socket.connect();\n    } else {\n      setLoading(false);\n    }\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    setOpen(false);\n    socket.auth = { username: textFieldValue };\n    setLoading(true);\n    socket.on(\"session\", (userID, sessionObj) => {\n      setUser(sessionObj);\n      setLoading(false);\n      localStorage.setItem(\"userID\", userID);\n    });\n    socket.connect();\n  };\n\n  const body = (\n    <Grid\n      container\n      style={modalStyle}\n      className={classes.paper}\n      direction=\"column\"\n      spacing={3}\n    >\n      <Grid item>\n        <Typography variant=\"h5\" gutterBottom style={{ textAlign: \"center\" }}>\n          Welcome To Chatter\n        </Typography>\n      </Grid>\n      <Grid item>\n        <TextField\n          error={!valid}\n          id=\"username\"\n          label=\"Enter Username\"\n          variant=\"outlined\"\n          helperText={\"length greater than 2\"}\n          fullWidth\n          required\n          onChange={handleUsernameChange}\n        />\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          disabled={buttonDisabled}\n          fullWidth\n          onClick={handleButtonClick}\n        >\n          Okay\n        </Button>\n      </Grid>\n    </Grid>\n  );\n\n  if (loading) return <div />;\n\n  return user ? (\n    <Friends />\n  ) : (\n    <Modal\n      open={open}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      {body}\n    </Modal>\n  );\n}\n\nexport default Register;\n","import { UserContext } from \"./components/User\";\nimport { useState } from \"react\";\nimport Register from \"./components/Register\";\n\nfunction App() {\n  const [context, setContext] = useState(null);\n  return (\n    <UserContext.Provider value={[context, setContext]}>\n      <Register />\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}